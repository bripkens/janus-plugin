{"name":"Janus-plugin","body":"# A Simple Jenkins Based Janus Interface\r\n\r\nThis project provides a user interface for the\r\n[Janus application](https://github.com/bripkens/janus). The user\r\ninterface leverages [Jenkins CI](http://jenkins-ci.org/) as a platform to\r\nachieve a seamless integration with existing company toolsets.\r\n\r\n# Deployment\r\n\r\n## Prerequisites\r\n\r\nThe plug-in may be able to work properly with lower versions than the ones\r\nlisted in this section. Janus was tested in the following environment:\r\n\r\n - Jenkins 1.452\r\n - JIRA 5\r\n - Confluence 4.2\r\n\r\nPlease make sure that the Mercurial plug-in is installed in Jenkins. To compile\r\nJanus and its dependencies you will need [Gradle](http://www.gradle.org/) and\r\n[Maven](http://maven.apache.org/) as well as JDK >= 1.6.\r\n[JIRA](http://confluence.atlassian.com/display/JIRA042/JIRA+XML-RPC+Overview)\r\nand [Confluence](http://confluence.atlassian.com/display/DOC/Enabling+the+Remote+API)\r\nSOAP and REST web services need to be activated in the applications'\r\nadministration menus.\r\n\r\n## Compilation\r\n\r\n    # First, dependencies need to be installed locally.\r\n    wget -O janus.tar.gz https://github.com/bripkens/janus/tarball/master\r\n    tar xfz janus.tar.gz\r\n    cd bripkens-janus-*\r\n    gradle check install\r\n    cd ..\r\n    rm -rf janus.tar.gz bripkens-janus-*\r\n\r\n    # Now the actual plug-in can be compiled.\r\n    wget -O janus-plugin.tar.gz https://github.com/bripkens/janus-plugin/tarball/master\r\n    tar xfz janus-plugin.tar.gz\r\n    cd bripkens-janus-plugin-*\r\n\r\n    # Make sure to skip the tests to avoid integration test execution\r\n    mvn package -DskipTests\r\n\r\n## Installation\r\n\r\nGo to your Jenkins installation plug-in administration page. This page is\r\naccessible through `Manage Jenkins -> Manage Plugins -> Advanced`. The right\r\nlocation can typically be verified by inspecting the URL - the URL should end\r\nwith `pluginManager/advanced`.\r\n\r\nOn this page, upload the plug-in manually by selecting the result of the\r\nprevious compilation step. The plug-in file is located at\r\n`janus-plugin/target/janus-plugin.hpi`.\r\n\r\n## Configuration\r\nOnce the plug-in is installed, you need to configure Janus before you can use\r\nit. In Jenkins' standard configuration menu (`Manage Jenkins ->\r\nConfigure System`), you can configure all Janus parts. In this menu and next\r\nto each configuration option, you will find additional information which\r\nfurther guides you through the configuration process. After configuration,\r\nyou can select the `Bootstrap Project` option from Jenkins' main menu to use\r\nJanus.\r\n\r\n\r\n# Version History\r\n\r\n## 0.5\r\n\r\n - configuration menu support for JIRA and Confluence (UC-3).\r\n - project bootstrap extended with support for automatic JIRA and Confluence\r\n   configuration (UC-11).\r\n\r\n## 0.4\r\n\r\n - configuration menu now supports configuration of continuous integration (CI)\r\n   systems (UC-2).\r\n - VCS configuration was extended with a new option *checkout URL*, i.e., a\r\n   URL which can be used by a continuous integration system to check out\r\n   source code (UC-2).\r\n - in the project bootstrap view a configured CI system can be selected\r\n   (currently only Jenkins CI) which will then be used as the target CI for\r\n   the build jobs (UC-10).\r\n\r\n## 0.3\r\n\r\n - integration test harness using jBehave and Selenium 2.\r\n - additional configuration options to locate the scaffold catalog, the general\r\n   scaffold directory as well as a working directory (UC-5).\r\n - new view to bootstrap projects. It initiallity supports repository creation\r\n   and application of project scaffolds. The bootstrap results are shown in\r\n   form of a log (UC-9).\r\n\r\n## 0.2\r\n\r\n - configuration dialog overhauled with proper validation and addition of\r\n   multiple version control systems (UC-1).\r\n - view to create new repositories (UC-7).\r\n\r\n## 0.1\r\n\r\n - initial project structure.\r\n - basic configuration dialog.\r\n\r\n# License\r\n\r\nCopyright (C) 2012 codecentric AG, Licensed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0).","tagline":"A Janus plugin for Jenkins","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}